type: postgresql

version:
  postgresql: "17"
  timescaledb: "2.15"
  postgis: "3.4"

###
# -- Cluster mode of operation. Available modes:
# * `standalone` - default mode. Creates new or updates an existing CNPG cluster.
# * `replica` - Creates a replica cluster from an existing CNPG cluster. # TODO
# * `recovery` - Same as standalone but creates a cluster from a backup, object store or via pg_basebackup.
mode: standalone

recovery:
  method: backup
  pitrTarget:

    time: ""
  backupName: "grafana-pg"

  clusterName: "grafana-pg"
  database: grafana
  owner: grafana
  endpointURL: http://minio.minio.svc.cluster.local:9000
  destinationPath: ""
  provider: s3
  s3:
    region: "us-east-1"
    bucket: "postgres"
    path: "/grafana"
    accessKey: <path:secret/data/minio#postgres_user>
    secretKey: <path:secret/data/minio#postgres_password>
    inheritFromIAMRole: false

  pgBaseBackup:
    database: grafana
    secret: "postgres-superuser-secret"
    owner: "grafana"
    source:
      host: ""
      port: 5432
      username: ""
      database: "grafana"
      sslMode: "verify-full"

cluster:
  # -- Number of instances
  instances: 3

  storage:
    size: 8Gi
    accessModes:
    - ReadWriteMany
    storageClass: nfs-csi

  walStorage:
    enabled: true
    size: 1Gi
    storageClass: nfs-csi

  postgresUID: 26
  postgresGID: 26

  podTemplate:
    spec:
      securityContext:
        runAsUser: 26
        runAsGroup: 26
        runAsNonRoot: true
        fsGroup: 26
        fsGroupChangePolicy: OnRootMismatch
  resources: {}
    # limits:
    #   cpu: 2000m
    #   memory: 8Gi
    # requests:
    #   cpu: 2000m
    #   memory: 8Gi
  enableSuperuserAccess: true
  superuserSecret: "postgres-superuser-secret"

  roles:
  - name: grafana
    ensure: present
    login: true
    superuser: false
    inRoles: []
    passwordSecret:
      name: "postgres-superuser-secret"
  # - name: loki
  #   ensure: present
  #   login: true
  #   superuser: false
  #   inRoles: []
  #   passwordSecret:
  #     name: loki-db-credentials
  # - name: tempo
  #   ensure: present
  #   login: true
  #   superuser: false
  #   inRoles: []
  #   passwordSecret:
  #     name: tempo-db-credentials

  monitoring:
    enabled: true
    podMonitor:
      enabled: true
    prometheusRule:
      enabled: true

  postgresql:
    parameters:
      max_connections: "300"

  initdb:
    localeCollate: 'en_US.utf8'
    localeCType: 'en_US.utf8'
    dataChecksums: true
    database: app
    owner: grafana
    secret:
      name: postgres-superuser-secret
    postInitTemplateSQL:
    - CREATE EXTENSION postgis;
    - CREATE EXTENSION postgis_topology;
    - CREATE EXTENSION fuzzystrmatch;
    - CREATE EXTENSION postgis_tiger_geocoder

  serviceAccountTemplate: {}

  additionalLabels: {}
  annotations: {}

backups:
  enabled: true
  endpointURL: http://minio.minio.svc.cluster.local:9000
  destinationPath: ""
  provider: s3
  s3:
    region: "us-east-1"
    bucket: "postgres"
    path: "/grafana"
    accessKey: <path:secret/data/minio#postgres_user>
    secretKey: <path:secret/data/minio#postgres_password>
    inheritFromIAMRole: false

  scheduledBackups:
  - name: daily-backup

    schedule: "0 0 5 * * *"
    backupOwnerReference: self
    method: barmanObjectStore
  retentionPolicy: "30d"

poolers: []
